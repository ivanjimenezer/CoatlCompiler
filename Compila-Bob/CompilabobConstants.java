/* Generated By:JavaCC: Do not edit this line. CompilabobConstants.java */

/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface CompilabobConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int INICIO = 4;
  /** RegularExpression Id. */
  int FIN = 5;
  /** RegularExpression Id. */
  int IF = 6;
  /** RegularExpression Id. */
  int ELSE = 7;
  /** RegularExpression Id. */
  int CicloIterado = 8;
  /** RegularExpression Id. */
  int CicloLimit = 9;
  /** RegularExpression Id. */
  int CicloWhile = 10;
  /** RegularExpression Id. */
  int ESCRIBIR = 11;
  /** RegularExpression Id. */
  int LEER = 12;
  /** RegularExpression Id. */
  int ParenIzq = 13;
  /** RegularExpression Id. */
  int ParenDer = 14;
  /** RegularExpression Id. */
  int SepIzq = 15;
  /** RegularExpression Id. */
  int SepDer = 16;
  /** RegularExpression Id. */
  int PuntoComa = 17;
  /** RegularExpression Id. */
  int COMA = 18;
  /** RegularExpression Id. */
  int ASIGNACION = 19;
  /** RegularExpression Id. */
  int MENOR = 20;
  /** RegularExpression Id. */
  int MAYOR = 21;
  /** RegularExpression Id. */
  int MENOR_IGUAL = 22;
  /** RegularExpression Id. */
  int MAYOR_IGUAL = 23;
  /** RegularExpression Id. */
  int IGUALDAD = 24;
  /** RegularExpression Id. */
  int OR = 25;
  /** RegularExpression Id. */
  int AND = 26;
  /** RegularExpression Id. */
  int NOTEQ = 27;
  /** RegularExpression Id. */
  int NOT = 28;
  /** RegularExpression Id. */
  int MAS = 29;
  /** RegularExpression Id. */
  int MENOS = 30;
  /** RegularExpression Id. */
  int DIV = 31;
  /** RegularExpression Id. */
  int MODULO = 32;
  /** RegularExpression Id. */
  int MULTI = 33;
  /** RegularExpression Id. */
  int ENTERO = 34;
  /** RegularExpression Id. */
  int FLOTANTE = 35;
  /** RegularExpression Id. */
  int ID_CADENA = 36;
  /** RegularExpression Id. */
  int BOOLEANO = 37;
  /** RegularExpression Id. */
  int NUMERO = 38;
  /** RegularExpression Id. */
  int NUMDECIMAL = 39;
  /** RegularExpression Id. */
  int CADENAS = 40;
  /** RegularExpression Id. */
  int EST_LOGIC = 41;
  /** RegularExpression Id. */
  int IDENTIFICADOR = 42;
  /** RegularExpression Id. */
  int UNKNOW = 43;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<token of kind 1>",
    "<token of kind 2>",
    "<token of kind 3>",
    "\"compilar_coatl\"",
    "\"ejecutar_coatl\"",
    "\"decide\"",
    "\"sino\"",
    "\"repito hasta que\"",
    "\"repito\"",
    "\"mientras\"",
    "\"muestra\"",
    "\"recibir\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\";\"",
    "\",\"",
    "\":\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"=\"",
    "\"|\"",
    "\"&\"",
    "\"!=\"",
    "\"!\"",
    "\"+\"",
    "\"-\"",
    "\"/\"",
    "\"%\"",
    "\"*\"",
    "\"E_\"",
    "\"D_\"",
    "\"C_\"",
    "\"L_\"",
    "<NUMERO>",
    "<NUMDECIMAL>",
    "<CADENAS>",
    "<EST_LOGIC>",
    "<IDENTIFICADOR>",
    "<UNKNOW>",
  };

}
